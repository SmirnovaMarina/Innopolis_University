# -*- coding: utf-8 -*-
"""Assignment2_Smirnova_G6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fsmTbxzNcDwClAxex8lTPfBBPq3AhfPC

# Task 1
Make x_desired and x_dot_desired change with time (solve trajectory tracking problem).

#Solution
Let's add two functions $x\_desired\_timedep(t)$ and $x\_dot\_desired\_timedep(t)$ :

Note:
$x\_dot\_desired\_timedep(t)$ function is a derivative of the function inside $x\_desired\_timedep(t)$.
"""

import numpy as np
from numpy.linalg import eig
from scipy.integrate import odeint
import matplotlib.pyplot as plt


time = np.linspace(0, 1, 1000)    # interval from 0 to 1
mu = 1;
k = 10;

x_desired = 1
x_dot_desired = 0

def x_desired_timedep(t):
    return 2*t*t+t

def x_dot_desired_timedep(t):
    return 4*t+1

kp = 100;
kd = 20;

def Oscillator(x, t):
    return np.array([x[1], (- mu*x[1] - k*x[0])])

def Oscillator_Control(x, t):
    error     = x_desired_timedep(t)     - x[0]
    error_dot = x_dot_desired_timedep(t) - x[1]
    u = kp*error + kd*error_dot    
    return np.array([x[1], (u - mu*x[1] - k*x[0])])

x0 = np.random.rand(2)
print(x0)

solution = {"Oscillator": odeint(Oscillator, x0, time), "Oscillator_Control": odeint(Oscillator_Control, x0, time)}

plt.subplot(121)
plt.plot(time, solution["Oscillator"])
plt.xlabel('time')
plt.ylabel('x(t)')
plt.title('passive')

plt.subplot(122)
plt.plot(time, solution["Oscillator_Control"])
plt.xlabel('time')
plt.ylabel('x(t)')
plt.title('controlled')
plt.show()

"""#Task 2
Tune controller gains  $k_p$  and  $k_d$ . Find gains that provide no ocsillations and no overshoot.

#Solution
Consider a second order linear ODE:

$$\ddot x + \mu \dot x + k x= u$$

We use PD control:

$$u = k_d (\dot x^*- \dot x) + k_p (x^*-x) $$

For this task x_desired and x_dot_desired must be constant values.
"""

import numpy as np
from numpy.linalg import eig
from scipy.integrate import odeint
import matplotlib.pyplot as plt


time = np.linspace(0, 15, 1000)    # interval from 0 to 30
mu = 1;
k = 10;

x_desired = 0
x_dot_desired = 0

kp = 3
kd = 5

def Oscillator(x, t):
    return np.array([x[1], (- mu*x[1] - k*x[0])])

def Oscillator_Control(x, t):
    error     = x_desired - x[0]
    error_dot = x_dot_desired - x[1]
    u = kp*error + kd*error_dot    
    return np.array([x[1], (u - mu*x[1] - k*x[0])])

x0_rand = np.random.rand(2) # for Task 2
x0 = [0.5,0.02] # assume x0 = [0.5,0.02] for the Task 3

solution = {"Oscillator": odeint(Oscillator, x0, time), "Oscillator_Control": odeint(Oscillator_Control, x0, time)}

plt.subplot(121)
plt.plot(time, solution["Oscillator"])
plt.xlabel('time')
plt.ylabel('x(t)')
plt.title('passive')

plt.subplot(122)
plt.plot(time, solution["Oscillator_Control"])
plt.xlabel('time')
plt.ylabel('x(t)')
plt.title('controlled')
plt.show()

"""#Conclusion

Consider $k_p$:
  1. Increase -> overshoot increase, oscillations increase and stability degrade
  2. Decrease -> overshoot decrese, oscillations decrease and stability improves

Consider $k_d$:
  1. Increase -> overshoot decrease, oscillations decrease
  2. Decrease -> overshoot increase, oscillations increase

Values of $k_p$ and $k_d$ that provide no overshoot and no oscillations:

$k_p = 3$

$k_d = 5$

#Task 3
Prove that controlled oscillator dynamics  $\ddot x + μ\dot x + kx=kd(\dot x^*− \dot x)+kp(x^*−x)$  is stable for your choice of  $k_p$  and  $k_d$.

#Solution
Consider a second order linear ODE:

$$\ddot x + \mu \dot x + k x= u$$

With $\mu = 1$ and $k = 10$.
Values of $k_p = 3$  and  $k_d = 5$.

**State Space Model:**

$$\ddot x + \dot x + 10 x= u$$

$$X = \begin{bmatrix} x_1 \\  x_2 \end{bmatrix} = \begin{bmatrix} \dot x \\  x \end{bmatrix}$$
$$\dot X = AX + Bu$$

$$\begin{bmatrix} \dot x_1 \\ \dot x_2 \end{bmatrix} = 
\begin{bmatrix} 
-1 & -10 \\
1 & 0 
\end{bmatrix} 
\begin{bmatrix}x_1 \\ x_2 \end{bmatrix} + \begin{bmatrix}1 \\ 0 \end{bmatrix}u$$

**Stabilizing control:**

$$A - BK = A^*$$

Eigenvalues of $A^*$ must have negative real parts to make our system stable.

$K = \begin{bmatrix}a & b \end{bmatrix}$

$$A^* = \begin{bmatrix}-1-a & -10-b \\ 1 & 0 \end{bmatrix}$$

$\lambda^2 - trace(A^*)\lambda + det(A^*) = 0$
$\lambda^2 - (-1-a)\lambda + (10+b) = 0$

$\lambda_1 * \lambda_2 = c = 10+b$

$\lambda_1 + \lambda_2 = -b = -1-a$

**As a result we get inequalities**:

$$10+b > 0$$

$$-1-a < 0$$

Therefore, $K = \begin{bmatrix}5 & 3 \end{bmatrix}$. And values $k_p = 5$  and  $k_d = 5$ are suitable.
In this case matrix K should look like $K = \begin{bmatrix}k_d & k_p \end{bmatrix}$.
"""